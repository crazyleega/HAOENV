# Run as a less privileged user for security reasons.
user www www;
# How many worker threads to run;
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes 1;
# Maximum open file descriptors per process;
# should be > worker_connections.
worker_rlimit_nofile 8192;
events {
  # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
  # and this is probably the point at which you hire people who are smarter than
  # you, as this is *a lot* of requests.
  worker_connections 8000;
}
# Default error log file
# (this is only used when you don't override error_log on a server{} level)
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


# Main configuration
http {
  # Hide nginx version information.
  server_tokens off;
  # Proxy cache definition
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
  proxy_temp_path /var/tmp;
  proxy_read_timeout 180;
  # Define the MIME types for files.
  include conf/mimetypes.conf;
  default_type application/octet-stream;
  # Update charset_types due to updated mime.types
  charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

  map $http_user_agent $log_ua {

    ~Pingdom 0;
    ~Googlebot 0;
    ~Baiduspider 0;

    default 1;
  }

  map $request_uri $log_ua2 {
    /status/ 0;
    /cfs/servertime 0;
    default $log_ua;
  }

  # Format to use in log files
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  # Default log file
  # (this is only used when you don't override access_log on a server{} level)
  access_log /var/log/nginx/access.log main if=$log_ua2;
  # How long to allow each connection to stay idle; longer values are better
  # for each individual client, particularly for SSL, but means that worker
  # connections are tied up longer. (Default: 65)
  keepalive_timeout 65;

  client_max_body_size 30M;
  #limit_req_zone $binary_remote_addr zone=two:12m rate=10r/s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  sendfile        on;
  # Tell Nginx not to send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out. (adds TCP_CORK)
  tcp_nopush      on;
  # GZip Compression
  include conf/gzip.conf;

  # Error pages redirections
  error_page 404 /404.html;
  error_page 500 502 503 504  /50x.html;

  # Upstream server for the web application server and load balancing
  include conf/upstream-server-and-load-balancing.conf;
  # Upgrade proxy web-socket connections
  include conf/websocket-upgrade.conf;


    server {
        server_name b.teachtours.com;
        listen [::]:80;
        listen 80;

         location / {
           proxy_http_version 1.1;
           proxy_pass http://backend;
           proxy_headers_hash_max_size 1024;
           proxy_headers_hash_bucket_size 128;
           proxy_redirect off;
           # Upgrade proxy web-socket connections
           proxy_set_header Upgrade $http_upgrade; # allow websockets
           proxy_set_header Connection $connection_upgrade;
           proxy_set_header X-Forward-Proto http;
           proxy_set_header Host $http_host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forward-Proto http;
           proxy_set_header X-Nginx-Proxy true;
           proxy_cache one;
           proxy_cache_key prj$request_uri$scheme;
           proxy_cache_bypass $http_upgrade;
           # Expiration rules
         }

         location @fallback {
                proxy_http_version 1.1;
                proxy_pass http://backend;
                proxy_headers_hash_max_size 1024;
                proxy_headers_hash_bucket_size 128;
                proxy_redirect off;
                # Upgrade proxy web-socket connections
                proxy_set_header Upgrade $http_upgrade; # allow websockets
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header X-Forward-Proto http;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forward-Proto http;
                proxy_set_header X-Nginx-Proxy true;
                proxy_cache one;
                proxy_cache_key prj$request_uri$scheme;
                proxy_cache_bypass $http_upgrade;
         }
    }
    server {
        server_name teachtours.com;
        listen [::]:80;
        listen 80;

        location / {
        include conf/proxy-pass-and-cache-web-server.conf;
        }

        location @fallback {
        include conf/proxy-pass-and-cache-web-server.conf;
        }
    }
}
