version: '2'
services:
    mongo2:
        container_name: "mongo2"
        image: mongo:3.0.7
        ports:
            - "27018:27017"
            - "28018:28017"
        command: mongod --replSet rs1 --port 27017 --journal --smallfiles
        volumes:
            - mongo:/teachtour/mongo2

    mongo3:
        container_name: "mongo3"
        image: mongo:3.0.7
        ports:
            - "27019:27017"
            - "28019:28017"
        command: mongod --replSet rs1 --port 27017 --journal --smallfiles
        volumes:
            - mongo:/teachtour/mongo3

    mongo1:
        container_name: "mongo1"
        image: mongo:3.0.7
        hostname: mongo1
        ports:
            - "27017:27017"
            - "28017:28017"
        command: mongod --replSet rs1 --port 27017 --journal --smallfiles
        volumes:
            - mongo:/teachtour/mongo1
        links:
            - mongo2:mongo2
            - mongo3:mongo3

    mongo-rs-setup:
        container_name: "mongo-rs-setup"
        build: ./mongosetup
        depends_on:
            - "mongo1"
            - "mongo2"
            - "mongo3"
        links:
            - mongo1:mongo1
            - mongo2:mongo2
            - mongo3:mongo3
        volumes:
            - ./scripts:/scripts
        environment: 
            - MONGO1=mongo1
            - MONGO2=mongo2
            - MONGO3=mongo3
            - RS=rs1
        entrypoint: [ "/setup.sh" ]

    todos:
      build: ~/Downloads/todos
      container_name: todos
      hostname: todos
      environment:
        MONGO_URL: "mongodb://mongo1:27017"
        PORT: 3000
        ROOT_URL: "http://teachtours.com"
        MONGO_OPLOG_URL: "mongodb://mongo1:27017/local"
        METEOR_ENV: "prod"
      expose:
        - 3000
      depends_on:
        - "mongo-rs-setup"
      links:
            - mongo1:mongo1
            - mongo2:mongo2
            - mongo3:mongo3
      restart: always

    web1:
        image: crccheck/hello-world:latest
        container_name: web1
        hostname: web1

    web2:
        build: ./web
        container_name: web2
        hostname: web2

    nginx:
      build: ./nginx
      container_name: nginx
      depends_on:
        - todos
        - web1
        - web2
#        - web2
#      links:
#        - web1:web1
#        - web2:web2
#      environment:
#        HOST_TARGET: "prod"
      ports:
        - "80:80"

volumes:
  mongo:
